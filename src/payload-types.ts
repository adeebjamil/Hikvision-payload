/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    servicepage: Servicepage;
    products: Product;
    categories: Category;
    gallery: Gallery;
    galleryCategories: GalleryCategory;
    faqs: Faq;
    'best-products': BestProduct;
    inquiries: Inquiry;
    'contact-submissions': ContactSubmission;
    redirects: Redirect;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    servicepage: ServicepageSelect<false> | ServicepageSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    gallery: GallerySelect<false> | GallerySelect<true>;
    galleryCategories: GalleryCategoriesSelect<false> | GalleryCategoriesSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    'best-products': BestProductsSelect<false> | BestProductsSelect<true>;
    inquiries: InquiriesSelect<false> | InquiriesSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'site-settings': SiteSetting;
    homepage: Homepage;
    footer: Footer;
  };
  globalsSelect: {
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  cloudinaryUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "servicepage".
 */
export interface Servicepage {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  heroImage: string | Media;
  /**
   * Add multiple product images for the gallery view
   */
  productImages?:
    | {
        image: string | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  isNew?: boolean | null;
  /**
   * Secondary title/description like "2 MP AcuSense Fixed Cube Network Camera"
   */
  subtitle?: string | null;
  /**
   * This will be used for the product URL
   */
  slug: string;
  /**
   * Select the main product category
   */
  mainCategory: 'network-products' | 'turbo-hd-products' | 'access-control' | 'display-and-control' | 'solution';
  /**
   * Select the specific product type
   */
  productType?:
    | (
        | 'network-camera'
        | 'ptz-camera'
        | 'nvr'
        | 'turbo-hd-cameras'
        | 'dvr'
        | 'monitors'
        | 'digital-signage'
        | 'controllers'
        | 'lcd-video-walls'
        | 'led-displays'
        | 'access-controllers'
        | 'visitors-terminals'
        | 'electrical-locks'
        | 'face-recognition-terminal'
        | 'readers'
        | 'kits'
        | 'card-terminals'
        | 'fingerprint-terminals'
      )
    | null;
  /**
   * Select the product series
   */
  series?:
    | (
        | 'value-series'
        | 'turbo-hd-cameras-with-colorvu'
        | 'pro-series'
        | 'webcam-series'
        | 'iot-series'
        | 'audio-video-collaboration-solution'
        | 'ultra-series'
        | 'easy-series'
        | 'special-series'
        | 'covert-series'
        | 'mobile-series'
        | 'positioning-system'
        | 'pro-ptz'
        | 'ultra-ptz'
        | 'pro-nvr'
        | 'ultra-nvr'
        | 'value-nvr'
        | 'standard-series'
        | 'advanced-series'
        | 'premium-series'
        | 'enterprise-series'
        | 'budget-series'
      )
    | null;
  categories: string | Category;
  /**
   * A short one-line description (max 200 chars)
   */
  shortDescription: string;
  /**
   * Select feature icons to display on product page
   */
  featureIcons?:
    | {
        iconType:
          | 'pir'
          | 'sd-card'
          | 'h265'
          | 'audio'
          | 'wdr'
          | 'vehicle'
          | '4k'
          | 'night-vision'
          | 'ai'
          | 'waterproof';
        /**
         * Optional: Upload a custom icon instead of using a predefined one
         */
        customIcon?: (string | null) | Media;
        /**
         * Optional: Override the default label for this icon
         */
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  details?: {
    features?:
      | {
          feature: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Add specifications by category
     */
    specifications?:
      | {
          /**
           * Specification category (e.g., Camera, Lens, Video)
           */
          category: string;
          specs?:
            | {
                name: string;
                /**
                 * Can include detailed formatted specifications
                 */
                value: {
                  root: {
                    type: string;
                    children: {
                      type: string;
                      version: number;
                      [k: string]: unknown;
                    }[];
                    direction: ('ltr' | 'rtl') | null;
                    format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                    indent: number;
                    version: number;
                  };
                  [k: string]: unknown;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  products?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery".
 */
export interface Gallery {
  id: string;
  title: string;
  image: string | Media;
  category: string | GalleryCategory;
  description?: string | null;
  /**
   * Order in which to display this item (lower numbers first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "galleryCategories".
 */
export interface GalleryCategory {
  id: string;
  title: string;
  /**
   * Order in which to display this category (lower numbers first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: string;
  question: string;
  answer: string;
  /**
   * Optional category for grouping FAQs
   */
  category?: string | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "best-products".
 */
export interface BestProduct {
  id: string;
  title: string;
  image: string | Media;
  /**
   * Text to display on the ribbon (e.g., "UAE TOP 1", "Dubai Hikvision")
   */
  ribbonText?: string | null;
  description?: string | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries".
 */
export interface Inquiry {
  id: string;
  name: string;
  mobile: string;
  email: string;
  product?: string | null;
  message?: string | null;
  status?: ('new' | 'contacted' | 'closed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: string;
  name: string;
  email: string;
  phone?: string | null;
  subject: string;
  message: string;
  department?: ('sales' | 'support') | null;
  status?: ('new' | 'in-progress' | 'completed') | null;
  submitDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'products';
      value: string | Product;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'servicepage';
        value: string | Servicepage;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'gallery';
        value: string | Gallery;
      } | null)
    | ({
        relationTo: 'galleryCategories';
        value: string | GalleryCategory;
      } | null)
    | ({
        relationTo: 'faqs';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'best-products';
        value: string | BestProduct;
      } | null)
    | ({
        relationTo: 'inquiries';
        value: string | Inquiry;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: string | ContactSubmission;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  cloudinaryUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "servicepage_select".
 */
export interface ServicepageSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  productImages?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  isNew?: T;
  subtitle?: T;
  slug?: T;
  mainCategory?: T;
  productType?: T;
  series?: T;
  categories?: T;
  shortDescription?: T;
  featureIcons?:
    | T
    | {
        iconType?: T;
        customIcon?: T;
        label?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  details?:
    | T
    | {
        features?:
          | T
          | {
              feature?: T;
              id?: T;
            };
        specifications?:
          | T
          | {
              category?: T;
              specs?:
                | T
                | {
                    name?: T;
                    value?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery_select".
 */
export interface GallerySelect<T extends boolean = true> {
  title?: T;
  image?: T;
  category?: T;
  description?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "galleryCategories_select".
 */
export interface GalleryCategoriesSelect<T extends boolean = true> {
  title?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "best-products_select".
 */
export interface BestProductsSelect<T extends boolean = true> {
  title?: T;
  image?: T;
  ribbonText?: T;
  description?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries_select".
 */
export interface InquiriesSelect<T extends boolean = true> {
  name?: T;
  mobile?: T;
  email?: T;
  product?: T;
  message?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  phone?: T;
  subject?: T;
  message?: T;
  department?: T;
  status?: T;
  submitDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: string;
  'site-name': string;
  logo: string | Media;
  favicon?: (string | null) | Media;
  /**
   * Add navigation items for the header
   */
  navItems?:
    | {
        label: string;
        url: string;
        /**
         * Add categories for dropdown menu (if any)
         */
        categories?:
          | {
              name: string;
              url: string;
              /**
               * Add subcategories for this category (if any)
               */
              subcategories?:
                | {
                    name: string;
                    url: string;
                    /**
                     * Add third-level categories for this subcategory (if any)
                     */
                    tertiaryCategories?:
                      | {
                          name: string;
                          url: string;
                          id?: string | null;
                        }[]
                      | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add social media links for the header
   */
  socialLinks?:
    | {
        platform: 'facebook' | 'twitter' | 'instagram' | 'linkedin' | 'youtube';
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  title: string;
  /**
   * Add images for the homepage carousel slider
   */
  sliderImage?:
    | {
        image: string | Media;
        /**
         * Alternative text for accessibility
         */
        altText: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Add items to display in the carousel section
   */
  carouselItems?:
    | {
        title: string;
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  footerLogo?: (string | null) | Media;
  description?: string | null;
  columns?:
    | {
        title: string;
        links?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  contactInfo?: {
    address?: string | null;
    phone?: string | null;
    email?: string | null;
    workingHours?: string | null;
  };
  socialLinks?:
    | {
        platform: 'facebook' | 'twitter' | 'instagram' | 'linkedin' | 'youtube' | 'whatsapp';
        url: string;
        id?: string | null;
      }[]
    | null;
  copyrightText?: string | null;
  navLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  'site-name'?: T;
  logo?: T;
  favicon?: T;
  navItems?:
    | T
    | {
        label?: T;
        url?: T;
        categories?:
          | T
          | {
              name?: T;
              url?: T;
              subcategories?:
                | T
                | {
                    name?: T;
                    url?: T;
                    tertiaryCategories?:
                      | T
                      | {
                          name?: T;
                          url?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  title?: T;
  sliderImage?:
    | T
    | {
        image?: T;
        altText?: T;
        id?: T;
      };
  carouselItems?:
    | T
    | {
        title?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  footerLogo?: T;
  description?: T;
  columns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        id?: T;
      };
  contactInfo?:
    | T
    | {
        address?: T;
        phone?: T;
        email?: T;
        workingHours?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  copyrightText?: T;
  navLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}